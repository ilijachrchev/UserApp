@model UserApp.Models.ProfileViewModel;


<style>
	body, html {
		margin: 0;
		font-family: 'Segoe UI', sans-serif;
		background-color: #f0f2f5;
	}

	.profile-container {
		max-width: 600px;
		margin: 30px auto;
		padding: 25px;
		background: white;
		border-radius: 12px;
		box-shadow: 0 4px 16px rgba(0,0,0,0.08);
		position: relative;
	}

	h2 {
		margin-bottom: 20px;
		color: #333;
	}

	.profile-header {
		display: flex;
		justify-content: space-between;
		align-items: center;
		margin-bottom: 10px;
		position: relative;
	}

	.profile-pic-wrapper {
		width: 80px;
		height: 80px;
		border-radius: 50%;
		overflow: hidden;
		border: 3px solid #007bff;
		background: #ddd;
		display: flex;
		justify-content: center;
		align-items: center;
		cursor: pointer;
		margin-top: -20px;
	}

		.profile-pic-wrapper img {
			width: 100%;
			height: 100%;
			object-fit: cover;
		}

	.upload-buttons {
		display: flex;
		flex-direction: column;
		gap: 6px;
		margin-top: 5px;
	}

		.upload-buttons button {
			padding: 6px 10px;
			font-size: 13px;
			background-color: #007bff;
			color: white;
			border: none;
			border-radius: 5px;
			cursor: pointer;
			transition: 0.2s ease;
		}

			.upload-buttons button:hover {
				background-color: #0056b3;
			}

	.profile-info {
		margin-top: 30px;
	}

		.profile-info label {
			display: block;
			margin-top: 14px;
			font-weight: 600;
			color: #444;
		}

		.profile-info input[type="text"],
		.profile-info input[type="email"],
		.profile-info input[type="tel"] {
			width: 100%;
			padding: 8px;
			margin-top: 6px;
			border: 1px solid #ccc;
			border-radius: 6px;
			box-sizing: border-box;
			font-size: 14px;
		}

	.verification-status {
		font-size: 0.95em;
		margin-left: 10px;
	}

	.verified {
		color: green;
		font-weight: 600;
	}

	.not-verified {
		color: red;
		font-weight: 600;
	}

	.verify-button,
	.profile-info button {
		margin-top: 8px;
		padding: 6px 10px;
		font-size: 13px;
		background-color: #28a745;
		color: white;
		border: none;
		border-radius: 5px;
		cursor: pointer;
		transition: 0.2s ease;
	}

		.verify-button:hover,
		.profile-info button:hover {
			background-color: #1e7e34;
		}

	.btn-primary {
		margin-top: 20px;
		padding: 10px 16px;
		background-color: #007bff;
		color: white;
		border: none;
		border-radius: 6px;
		font-size: 14px;
		cursor: pointer;
		width: 100%;
		transition: 0.3s ease;
	}

		.btn-primary:hover {
			background-color: #0056b3;
		}

		#gorezaslika {
			width: 90px;
			float: left;
		}

	@@media (max-width: 640px) {
		.profile-header

	{
		flex-direction: column;
		align-items: center;
	}

	.profile-pic-wrapper {
		margin-top: 0;
	}

	.upload-buttons {
		flex-direction: row;
		gap: 8px;
		margin-top: 12px;
	}

	}
</style>



<script>
	function uploadProfilePic(input) {
		if (input.files && input.files[0]) 
		{
			// MAYBE I WILL ADD PREVIEW OR UPLOAD LOGIC HERE
			alert("Profile picture selected: " + input.files[0].name);

			//TODO: Implement upload to server via AJAX or form submit
		}
	}

	function openCamera() {
		// this triggers the file input with capture attribute to open the camera on supported devices
		const input = document.getElementById('profilePicInput');
		input.setAttribute('capture', 'environment'); //rear camera
		input.click();
	}
</script>


<div class="profile-container">
	<h2>My Account</h2>

	<div class="profile-header">
		<div class="profile-pic-wrapper"
		onclick="document.getElementById('profilePicInput').click();">
			@if (!string.IsNullOrEmpty(Model.ProfilePictureUrl))
			{
				<img src="@Model.ProfilePictureUrl" alt="Profile Picture" />
			}
			else
			{
				<span style="font-size: 36px; color:#007bff";"></span> //user icon emoji
			}
		</div>
	</div>

	<input type="file" id="profilePicInput" accept="image/*" style="display:none" onchange="uploadProfilePic(this)" capture="environment" />

	<div class="upload-buttons">
		<button type="button" id="gorezaslika" onclick="document.getElementById('profilePicInput').click();">Upload Photo</button>
		<button type="button" id="gorezaslika" onclick="openCamera()">Open Camera</button>
		<button type="button" id="gorezaslika" onclick="removeProfilePic()">Remove Photo</button>
	</div>

	<form method="post" asp-action="UpdateProfile">
		<div class="profile-info">
			<label>Full Name</label>
			<input type="text" name="FirstName" value="@Model.FirstName" readonly />

			<label>Email</label>
			<input type="email" name="Email" value="@Model.Email" readonly />
			<span class="verification-status @(Model.EmailConfirmed ? "verified" : "not-verified")">
				@(Model.EmailConfirmed ? "Verified" : "Not Verified"))
			</span>

			@if (!Model.EmailConfirmed)
			{
				<button type="submit" formaction="/Profile/SendEmailConfirmation" class="verify-button">Verify Email</button>
			}

			<label>Phone Number</label>
			<input type="tel" name="PhoneNumber" value="@Model.PhoneNumber" placeholder="Enter phone number" />

			<span>
				@(Model.PhoneNumberConfirmed ? "Verified" : "Not Verified")
			</span>

			@if (!Model.PhoneNumberConfirmed)
			{
				<button type="submit" formaction="/Profile/SendPhoneVerification">Send Verification Code</button>

				<label>Verification Code</label>
				<input type="text" name="PhoneVerificationCode" placeholder="Enter code" />

				<button type="submit" formaction="/Profile/VerifyPhone">Verify Code</button>
			}

		</div>

		<button type="submit" class="btn-primary mt-3">Save Changes</button>
	</form>
</div>
